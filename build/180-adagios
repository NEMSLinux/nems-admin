#!/bin/bash

echo $0 > /var/www/html/userfiles/nems-build.cur

# Reset old install
if [[ -e /opt/adagios/ ]]; then
  rm -rf /opt/adagios
fi
if [[ -e /etc/adagios/ ]]; then
  rm -rf /etc/adagios
fi
if [[ -e /opt/okconfig/ ]]; then
  rm -rf /opt/okconfig
fi

# Purge pip cache
python -m pip cache purge

# Add var folder if didn't get created in 050
if [[ ! -e /var/lib/nagios/ ]]; then
  mkdir /var/lib/nagios/
  chown -R nagios:nagios /var/lib/nagios/
fi

# Ensure update-alternatives is configured with Python 3.9
/root/nems/nems-admin/build/038-python
# Set Python 3.9 as the default for this installation
update-alternatives --set python /usr/lib/python3.9/bin/python3

# Install dependencies

apt-get install -y libapache2-mod-wsgi-py3
apt-get install -y python3-simplejson
apt-get install -y libgmp3-dev
apt-get install -y python3-dev
apt-get install -y python3-paramiko
apt-get install -y python3-venv

# Prepare sudo permissions
if ! grep -q "# Adagios" /etc/sudoers; then
echo '
# Adagios
Defaults:%nagios !requiretty
%nagios             ALL = NOPASSWD: /etc/init.d/nagios *
%nagios             ALL = NOPASSWD: /bin/systemctl *
%nagios             ALL = NOPASSWD: /usr/local/nagios/bin/nagios -v *
' | sudo EDITOR='tee -a' visudo
fi

# Download Adagios source code
git clone -b master https://github.com/opinkerfi/adagios.git /opt/adagios

# Enforce gunicorn version 20.1.0
sed -i '/gunicorn/c\gunicorn==20.1.0' /opt/adagios/requirements.txt

# Include setuptools in venv
echo "setuptools==58.2.0" >> /opt/adagios/requirements.txt

groupadd --system adagios
adduser --no-create-home --system --group adagios
usermod -aG nagios adagios
chown --recursive adagios:adagios /opt/adagios/

## Configure Adagios
if [[ -d /etc/adagios ]]; then
  rm -rf /etc/adagios
fi
mkdir -p /etc/adagios/conf.d /var/lib/adagios /etc/adagios
cp -f /root/nems/nems-migrator/data/adagios/adagios.conf /etc/adagios/
sed -i 's|# ALLOWED_HOSTS|ALLOWED_HOSTS|g' /etc/adagios/adagios.conf
cp /opt/adagios/adagios/etc/adagios/conf.d/force_script_name.conf /etc/adagios/conf.d/
cp /opt/adagios/adagios/etc/adagios/conf.d/okconfig.conf /etc/adagios/conf.d/
cp /opt/adagios/adagios/etc/sudoers.d/adagios /etc/sudoers.d/
chown --recursive adagios:adagios /etc/adagios /var/lib/adagios

echo "Adagios Virtual Environment prepped. Ready to proceed..."
sleep 5

# The following script will create a new Python virtual environment where Adagios is located.
su -c "PYTHON=/usr/lib/python3.9/bin/python3 && /opt/adagios/upgrade.sh" adagios

# Activate Python virtualenv
source /opt/adagios/venv/bin/activate
python -m pip cache purge
pynag config --append cfg_dir=/etc/adagios
pynag config --append "broker_module=/usr/local/lib/mk-livestatus/livestatus.o /usr/local/nagios/var/rw/live.sock"

## Install Adagios as systemd service
cp /opt/adagios/contrib/gunicorn.py /opt/adagios/gunicorn.py
cp /opt/adagios/contrib/*.service /etc/systemd/system/
systemctl daemon-reload
systemctl start adagios
systemctl enable adagios

## Install into apache2
# This is essentially the same as /opt/adagios/contrib/apache_gunicorn_adagios.conf but it has password protection
cat << EOF > /etc/apache2/conf-available/adagios.conf
ProxyPreserveHost On

Alias /static /opt/adagios/adagios/static
Alias /media /opt/adagios/adagios/media

<Directory /opt/adagios/adagios/media>
  Options Indexes FollowSymLinks MultiViews
  AllowOverride None
  Require all granted
</Directory>

<Directory /opt/adagios/adagios/static>
  Options Indexes FollowSymLinks MultiViews
  AllowOverride None
  Require all granted
</Directory>

<Location /static>
  ProxyPass !
</Location>

<Location /media>
  ProxyPass !
</Location>

<Location /adagios/>
  RequestHeader set "X-Forwarded-Proto" expr=%{REQUEST_SCHEME}
  ProxyPass http://127.0.0.1:8001/
  ProxyPassReverse http://127.0.0.1:8001/
  AuthName "Adagios Access"
  AuthType Basic
  AuthUserFile /var/www/htpasswd
  Require valid-user
</Location>
EOF
# Activate the new config
a2enconf adagios

#cp -f /root/nems/nems-migrator/data/adagios/adagios.conf /etc/adagios/

# Remove old symlink if it exists
if [[ -L /var/www/adagios ]]; then
  rm -f /var/www/adagios
fi


## Import templates
# Need to adapt these for NEMS Linux 1.6+ before they will work
#cp -f /root/nems/nems-migrator/data/adagios/templates/403.html /opt/adagios/adagios/templates/
#cp -f /root/nems/nems-migrator/data/adagios/templates/base.html /opt/adagios/adagios/templates/

## Install OKconfig from Github
source /opt/adagios/venv/bin/activate
sudo git clone -b master --depth 1 https://github.com/opinkerfi/okconfig.git /opt/okconfig
cd /opt/okconfig
pip install -r requirements.txt
python setup.py install
cp -f /root/nems/nems-migrator/data/adagios/okconfig.conf /etc/okconfig.conf
echo 'export PYTHONPATH=$PYTHONPATH:/opt/okconfig' > /etc/profile.d/okconfig.sh
ln -sf /opt/okconfig/usr/share/okconfig /usr/share/
ln -sf /opt/okconfig/usr/bin/okconfig /usr/local/bin/
okconfig init
okconfig verify

## Enable needed apache2 mods
a2enmod headers
a2enmod proxy_http

## Restart services
systemctl restart nagios adagios apache2

# Restore Python to auto mode
update-alternatives --auto python

# Echo so we don't exit when systemctl fails to restart apache2
echo "Done."
