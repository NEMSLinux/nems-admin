#!/bin/bash
echo $0 > /var/www/html/userfiles/nems-build.cur

# Add var folder if didn't get created in 050
if [[ ! -e /var/lib/nagios/ ]]; then
  mkdir /var/lib/nagios/
  chown -R nagios:nagios /var/lib/nagios/
fi

pipcommand="python -m pip"
#pipcommand=pip3

pythoncommand=python
#pythoncommand=python3

# the number in /usr/local/lib/ptyhon${pythondir}
pythondir=2.7

# Install dependencies

# When Python3 support is ready, uncomment:
apt-get install -y libapache2-mod-wsgi-py3
apt-get install -y python-simplejson
apt-get install -y libgmp-dev
apt-get install -y python-dev
apt-get install -y python-paramiko

# When Python3 support is ready, uncomment:
#apt-get install -y libapache2-mod-wsgi-py3
#apt-get install -y python3-simplejson
#apt-get install -y libgmp3-dev
#apt-get install -y python3-dev
#apt-get install -y python3-paramiko

# Prepare sudo permissions
if ! grep -q "# Adagios" /etc/sudoers; then
echo '
# Adagios
Defaults:%nagios !requiretty
%nagios             ALL = NOPASSWD: /etc/init.d/nagios *
%nagios             ALL = NOPASSWD: /bin/systemctl *
%nagios             ALL = NOPASSWD: /usr/local/nagios/bin/nagios -v *
' | sudo EDITOR='tee -a' visudo
fi

if ! grep -q "# Adagios 1.6" /etc/sudoers; then
echo '
# Adagios 1.6
Defaults:www-data    !requiretty
www-data ALL = (root) NOPASSWD: /usr/sbin/service nagios *
www-data ALL = (root) NOPASSWD: /usr/local/nagios/bin/nagios -v *
' | sudo EDITOR='tee -a' visudo
fi

# https://pypi.org/project/future/
$pipcommand install future

$pipcommand install --upgrade pip setuptools
$pipcommand install --ignore-installed six

# Install Django
$pipcommand install django==1.8
#$pipcommand install django
$pipcommand install django-clear-cache

# Install Pynag
cd /tmp
#git clone -b python3 git://github.com/pynag/pynag.git
git clone git://github.com/pynag/pynag.git
cd pynag
$pythoncommand setup.py build
$pythoncommand setup.py install

# Install Adagios
cd /tmp/
# Get the current release
wget -O adagios.tar.gz https://github.com/opinkerfi/adagios/archive/adagios-1.6.6-1.tar.gz
tar xzf adagios.tar.gz
cd adagios-adagios-1.6.6-1

# Try PR 662 for Python 3.7 support
#git clone -b adagios-2.0.1-1 https://github.com/opinkerfi/adagios
#cd adagios
#git fetch origin pull/662/head:pr_662
#git checkout pr_662

if [[ -d /etc/adagios ]]; then
  rm -rf /etc/adagios
fi
if [[ -d /usr/local/lib/python${pythondir}/dist-packages/adagios ]]; then
  rm -rf /usr/local/lib/python${pythondir}/dist-packages/adagios
fi
cp -R adagios/etc/adagios /etc/
cp -f /root/nems/nems-migrator/data/adagios/adagios.conf /etc/adagios/
echo "Installing to /usr/local/lib/python${pythondir}/dist-packages/adagios"
$pythoncommand /tmp/adagios-adagios-1.6.6-1/setup.py install
echo "Continuing."

# Remove old symlink
if [[ -L /var/www/adagios ]]; then
  rm -f /var/www/adagios
fi

ln -s /usr/local/lib/python${pythondir}/dist-packages/adagios /var/www/adagios
chown -R nagios:nagios /etc/adagios
rm -fr /var/www/adagios/etc/
mkdir -p /var/lib/adagios/userdata
chown -R www-data:www-data /var/lib/adagios
cp -f /root/nems/nems-migrator/data/adagios/settings.py /var/www/adagios/
chown -R www-data:www-data /var/www/adagios/

# Import templates
cp -f /root/nems/nems-migrator/data/adagios/templates/403.html /var/www/adagios/templates/
cp -f /root/nems/nems-migrator/data/adagios/templates/base.html /var/www/adagios/templates/

# Create the working folder for the WSGI daemon
if [[ ! -d /var/www/adagios-working ]]; then
  mkdir /var/www/adagios-working
  chown nagios:nagios /var/www/adagios-working
fi

cat << EOF > /etc/apache2/conf-available/adagios.conf
WSGISocketPrefix /var/run/apache2/wsgi
WSGIDaemonProcess adagios user=nagios home=/var/www/adagios-working group=nagios processes=1 threads=25 python-path=/var/www/adagios
WSGIProcessGroup adagios
WSGIScriptAlias /adagios /var/www/adagios/apache/adagios.wsgi

Alias /adagios/media /var/www/adagios/media

<Location /adagios>
   AuthName "Adagios Access"
   AuthType Basic
   AuthUserFile /var/www/htpasswd
   Require valid-user
</Location>
EOF

a2dismod python
a2enmod wsgi
a2enconf adagios

# Install okconfig
cd /opt
git clone -b "okconfig-python2/3" https://github.com/opinkerfi/okconfig.git
echo 'export PYTHONPATH=$PYTHONPATH:/opt/okconfig' > /etc/profile.d/okconfig.sh
cp -f /root/nems/nems-migrator/data/adagios/okconfig.conf /etc/okconfig.conf
source /etc/profile
ln -s /opt/okconfig/usr/share/okconfig /usr/share/
ln -s /opt/okconfig/usr/bin/okconfig /usr/local/bin/
okconfig init
okconfig verify

/bin/systemctl restart apache2

# Don't exit when systemctl fails to restart apache2
echo "Done."
